# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    OPENAI_API_KEY: '%env(OPENAI_API_KEY)%'
    app.jwtsecret: '%env(JWT_SECRET)%'
    stripe_webhook_secret: '%env(resolve:STRIPE_WEBHOOK_SECRET)%'
    stripe_sk: '%env(resolve:STRIPE_SK)%'
    stripe_pk: '%env(resolve:STRIPE_PK)%'
    app.path.featured_profils: /upload/images/profil
    aws_access_key_id: '%env(resolve:AWS_ACCESS_KEY_ID)%'
    aws_secret_access_key: '%env(resolve:AWS_SECRET_ACCESS_KEY)%'
    aws_default_region: '%env(resolve:AWS_DEFAULT_REGION)%'
    aws_bucket: '%env(resolve:AWS_BUCKET)%'
    aws_s3_base_url: '%env(resolve:AWS_S3_BASE_URL)%'
    aws_s3_endpoint: '%env(resolve:AWS_S3_ENDPOINT)%'


services:
     # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    GuzzleHttp\Client:
        arguments:
            $config:
                base_uri: 'https://api.openai.com/v1/'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Aws\S3\S3Client:
        arguments:
            - version: 'latest'
              region: '%env(resolve:AWS_DEFAULT_REGION)%'
              #endpoint: '%env(resolve:AWS_S3_ENDPOINT)%'
              credentials:
                key: '%env(resolve:AWS_ACCESS_KEY_ID)%'
                secret: '%env(resolve:AWS_SECRET_ACCESS_KEY)%'
